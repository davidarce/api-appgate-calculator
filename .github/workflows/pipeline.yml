# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven
name: Pipeline API appgate calculator

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  compile:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        java: [11]
    name: Java ${{ matrix.java }} compile
    steps:
      - uses: actions/checkout@master
      - name: Setup java
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - run: mvn -f pom.xml clean compile
  test:
    runs-on: ubuntu-20.04
    needs: compile
    name: Unit tests
    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Build and test project
      run: mvn -f pom.xml clean test
  integration-test:
    runs-on: ubuntu-20.04
    needs: compile
    name: Integration tests
    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Build and test project
      run: mvn -f pom.xml clean -P IT verify      
  package:
    runs-on: ubuntu-20.04
    needs: [test, integration-test]
    name: Package project
    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Generate jar file
      run: mvn -f pom.xml clean package
    - name: Upload Maven build artifact
      uses: actions/upload-artifact@v1
      with:
        name: artifact
        path: target/api-appgate-calculator-0.0.1-SNAPSHOT.jar
    - name: Upload Newrelic jar dependency artifact
      uses: actions/upload-artifact@v1
      with:
        name: newrelic-artifact
        path: target/dependency/newrelic/newrelic.jar
  build-docker:
    runs-on: ubuntu-20.04
    needs: package
    name: Build and push Docker image to Docker Hub
    steps:
    - uses: actions/checkout@v1
    - name: Download Maven build artifact
      uses: actions/download-artifact@v1
      with:
        name: artifact
    - name: Download Newrelic jar dependecy artifact
      uses: actions/download-artifact@v1
      with:
        name: newrelic-artifact
    - name: Prepare artifacts
      run: |
        mkdir -p target
        mv artifact/api-appgate-calculator-0.0.1-SNAPSHOT.jar target
        mkdir -p target/dependency/newrelic
        mv newrelic-artifact/newrelic.jar target/dependency/newrelic
    - name: Push to Docker Hub
      uses: docker/build-push-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: davidarce/api-appgate-calculator
        tag_with_ref: true
  deploy:
    runs-on: ubuntu-20.04
    needs: build-docker
    name: Deploy to Kubernetes
    steps:
    - name: Deploy application
      run: echo "Deploying application (e.g. Kubernetes)"
